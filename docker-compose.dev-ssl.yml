version: '3.8'

# Docker Compose Configuration for Development with SSL/TLS
# This replaces the frontend container with Nginx for SSL termination

services:
  postgres:
    image: postgres:16-alpine
    container_name: todo-postgres-dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: todouser
      POSTGRES_PASSWORD: todopass
      POSTGRES_DB: tododb
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todouser"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: todo-backend-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: todouser
      DB_PASSWORD: todopass
      DB_NAME: tododb
      JWT_SECRET: dev-secret-key-change-in-production
      FRONTEND_URL: https://localhost:8080
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - backend-network
      - frontend-network
    command: npm run dev
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: todo-frontend-dev
    environment:
      VITE_API_URL: /api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - frontend-network
    command: npm run dev -- --host 0.0.0.0
    stdin_open: true
    tty: true

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile.dev
    container_name: todo-nginx-dev
    ports:
      - "80:80"
      - "8080:443"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    networks:
      - frontend-network
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge

volumes:
  postgres-dev-data:
    driver: local
